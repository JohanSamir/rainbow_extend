import dopamine.discrete_domains.gym_lib
import dopamine.jax.networks
import dopamine.discrete_domains.run_experiment
import dopamine.jax.agents.dqn.dqn_agent
import dopamine.replay_memory.prioritized_replay_buffer
import dopamine.labs.atari_100k.atari_100k_rainbow_agent

import jax
import gin
import agents.opt_utils
import agents.networks_new
import agents.dqn_agent_new
import agents.external_configurations
import replay_runner
import agents.minatar_env

JaxDQNAgent.epsilon_train = 0.01
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 2000  # agent steps

JaxDQNAgentNew.gamma = 0.99
JaxDQNAgentNew.update_horizon = 10
JaxDQNAgentNew.min_replay_history = 1600
JaxDQNAgentNew.update_period = 1
JaxDQNAgentNew.target_update_period = 2000

JaxDQNAgentNew.optimizer = 'adam'
JaxDQNAgentNew.net_conf = 'atari'
JaxDQNAgentNew.env = None
JaxDQNAgentNew.normalize_obs = False
JaxDQNAgentNew.hidden_layer = 0
JaxRainbowAgentNew.hidden_conv = 3
JaxDQNAgentNew.neurons = 512
JaxDQNAgentNew.replay_scheme = 'prioritized' #'prioritized' or 'uniform'
JaxDQNAgentNew.target_opt = 1 #0:DQN 1:Double DQN 2:Munchausen DQN
JaxDQNAgentNew.mse_inf = True
JaxDQNAgentNew.noisy = True
JaxDQNAgentNew.dueling = True
JaxDQNAgentNew.initzer = @variance_scaling()
variance_scaling.scale=1
variance_scaling.mode='fan_avg'
variance_scaling.distribution='uniform'

JaxDQNAgentNew.layer_funct = 'relu'
JaxDQNAgentNew.normalization = 'non_normalization'

JaxDQNAgentNew.network = @networks_new.DQNNetwork
JaxDQNAgentNew.epsilon_fn = @jax.agents.dqn.dqn_agent.linearly_decaying_epsilon
Atari100kRainbowAgent.data_augmentation = False

JaxDQNAgentNew.tau = 0.03
JaxDQNAgentNew.alpha = 0.9 
JaxDQNAgentNew.clip_value_min = -1

create_opt.learning_rate = 0.0001
create_opt.eps =0.00015

atari_lib.create_atari_environment.game_name = 'Pong'
# Atari 100K benchmark doesn't use sticky actions.
atari_lib.create_atari_environment.sticky_actions = False
AtariPreprocessing.terminal_on_life_loss = True

Runner.num_iterations = 10
Runner.training_steps = 10000  # agent steps
Runner.max_steps_per_episode = 27000  # agent steps

OutOfGraphPrioritizedReplayBuffer.replay_capacity = 1000000 # 1M as a proxy for unbounded memory
OutOfGraphPrioritizedReplayBuffer.batch_size = 32
