import dopamine.jax.agents.dqn.dqn_agent
import dopamine.jax.networks
import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.replay_memory.prioritized_replay_buffer
import dopamine.labs.atari_100k.atari_100k_rainbow_agent

import agents.networks_new
import agents.rainbow_agent_new
import agents.external_configurations
import agents.minatar_env
import replay_runner

JaxDQNAgent.epsilon_train = 0.01
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 2000  # agent steps

JaxRainbowAgentNew.gamma = 0.99
JaxRainbowAgentNew.update_horizon = 1 # Rainbow
JaxRainbowAgentNew.min_replay_history = 1600
JaxRainbowAgentNew.update_period = 4 
JaxRainbowAgentNew.target_update_period = 2000

JaxRainbowAgentNew.optimizer = 'adam'
JaxRainbowAgentNew.noisy = False
JaxRainbowAgentNew.dueling = False
JaxRainbowAgentNew.initzer = @variance_scaling()
variance_scaling.scale=1
variance_scaling.mode='fan_avg'
variance_scaling.distribution='uniform'

JaxRainbowAgentNew.layer_funct = 'relu'
JaxRainbowAgentNew.normalization = 'non_normalization'

JaxRainbowAgentNew.double_dqn = False
JaxRainbowAgentNew.net_conf = 'atari'
JaxRainbowAgentNew.env = None
JaxRainbowAgentNew.normalize_obs = False
JaxRainbowAgentNew.hidden_layer = 0
JaxRainbowAgentNew.neurons = 512
JaxRainbowAgentNew.num_atoms = 51 # Original 51 
JaxRainbowAgentNew.vmax = 100.
JaxRainbowAgentNew.replay_scheme = 'uniform' 
JaxRainbowAgentNew.network  = @networks_new.RainbowDQN 
JaxRainbowAgentNew.epsilon_fn = @jax.agents.dqn.dqn_agent.linearly_decaying_epsilon
Atari100kRainbowAgent.data_augmentation = False

create_opt.learning_rate = 0.0001
create_opt.eps = 0.00015

atari_lib.create_atari_environment.game_name = 'Pong'
# Atari 100K benchmark doesn't use sticky actions.
atari_lib.create_atari_environment.sticky_actions = False
AtariPreprocessing.terminal_on_life_loss = True

Runner.num_iterations = 10
Runner.training_steps = 10000  # agent steps
Runner.max_steps_per_episode = 27000  # agent steps

OutOfGraphPrioritizedReplayBuffer.replay_capacity = 1000000 # 1M as a proxy for unbounded memory
OutOfGraphPrioritizedReplayBuffer.batch_size = 32
